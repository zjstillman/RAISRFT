np.lstsq for replacing cgls
use matplotlib
plt.figure(), plt.imshow(abs(im), cmap='gray'), plt.show()

plot distribution of hashkey
9 filters, one for each location of fourier

Train on several images, test, find minimal
numba, make code faster
strength with normalization
calculate distance between test and result
structure tensor for computing angles

larger sets
train on differrent 3d object
pixel type with other hash
spread out set to train
Try without normalization
Try dividing by mean for each pach filter